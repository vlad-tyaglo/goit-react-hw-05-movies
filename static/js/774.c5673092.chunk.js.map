{"version":3,"file":"static/js/774.c5673092.chunk.js","mappings":"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","sources":["API.js","components/MovieList/MovieList.styled.js","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/MovieList/MovieList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '7f364168711f1cf5c7d114ad640a94cd';\n\nexport async function  fetchTrendMovies(page) {\n    const response = await axios.get(`/3/trending/movie/day?api_key=${API_KEY}&page=${page}`);\n    return response.data;\n}\n\nexport async function fetchMovieByName(query, page) {\n    const response = await axios.get(`/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false&page=${page}`);\n    return response.data;\n}\n\nexport async function fetchMovieById(id) {\n    const response = await axios.get(`/3/movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n    const response = await axios.get(`/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport async function fetchMovieReviews(id) {\n    const response = await axios.get(`/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;\n}","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  padding: 20px 16px;\n  margin: 0 auto;\n`;\n\nexport const List = styled.ol`\n  margin-top: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  list-style: inside;\n`\n\nexport const ListItem = styled.li`\n  max-width: 1100px;\n`\n\nexport const Link = styled(NavLink)`\n  font-size: 16px;\n  padding-left: 8px;\n  color: black;\n  border-radius: 5px;\n  &:hover {\n    color: tomato;\n  }\n        \n`","import styled from \"styled-components\";\nimport ReactPaginate from 'react-paginate';\n\n\nexport const Paginate = styled(ReactPaginate)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & .page-link {\n    box-sizing: border-box;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    background-color: transparent;\n    outline: 0;\n    border: 0;\n    vertical-align: middle;\n    font-family: \"Roboto\",\"Helvetica\",\"Arial\",sans-serif;\n    font-weight: 400;\n    font-size: 0.875rem;\n    line-height: 1.43;\n    letter-spacing: 0.01071em;\n    border-radius: 4px;\n    text-align: center;\n    min-width: 32px;\n    height: 32px;\n    padding: 0 6px;\n    \n    color: rgba(0, 0, 0, 0.87);\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  }\n\n  & .page-item {\n    box-sizing: border-box;\n    min-width: 32px;\n    height: 32px;\n    margin: 0 3px;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center; \n  }\n\n  & .page-item.active {\n    background-color: rgba(0, 0, 0, 0.08);\n    border-radius: 4px;\n  }\n& .page-item:hover {\n  background-color: rgba(0, 0, 0, 0.12);\n  border-radius: 4px;\n}\n\n& .page-item.disabled {\n  opacity: 0.38;\n  pointer-events: none;\n  cursor: default;\n\n}\n`;","import { Paginate } from './Pagination.styled';\n\nexport function PaginatedItems({ onPageChange, pageCount }) {\n\n    const handlePageClick = (event) => {\n        onPageChange(event.selected + 1);\n  };\n\n  return (\n      <Paginate\n        nextLabel=\"next >\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={3}\n        marginPagesDisplayed={2}\n        pageCount={pageCount}\n        previousLabel=\"< previous\"\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousClassName=\"page-item\"\n        previousLinkClassName=\"page-link\"\n        nextClassName=\"page-item\"\n        nextLinkClassName=\"page-link\"\n        breakLabel=\"...\"\n        breakClassName=\"page-item\"\n        breakLinkClassName=\"page-link\"\n        containerClassName=\"pagination\"\n        activeClassName=\"active\"\n        renderOnZeroPageCount={null}\n      />\n  );\n}","import { useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { Container, List, ListItem, Link } from \"./MovieList.styled\";\nimport { PaginatedItems } from '../Pagination/Pagination';\n\nconst MovieList = ({movies, header, totalPages, changePage}) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {header && <h1>{ header}</h1>}\n          <List>\n            {movies.map(({ id, title }) => (\n              <ListItem key={id}>\n                <Link to={`/movies/${id}`} state={{from: location}}>\n                  {title}\n                </Link>\n            </ListItem>\n            ))}\n      </List>\n      {totalPages > 1 && <Container>\n        <PaginatedItems\n          onPageChange={changePage}\n          pageCount={totalPages} />\n      </Container>}\n      \n      </Container>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  })),\n  header: PropTypes.string,\n  totalPages: PropTypes.number,\n  changePage: PropTypes.func,\n};\n\nexport default MovieList;","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  padding: 20px 16px 0;\n  margin: 0 auto;\n`;\n\nexport const Form = styled.form`\nposition: relative;\nwidth: 400px;\n`\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  width: 280px;\n  height: 30px;\n  padding: 4px;\n  border-radius: 4px;\n  font-size: 16px;\n  outline-color: gray;\n\n  &:focus,\n  &:active {\n    outline-color: tomato;\n  }\n`;\n\nexport const Button = styled.button`\nposition: absolute;\nright: 8px;\n  box-sizing: border-box;\n  width: 100px;\n  height: 30px;\n  background-color: transparent;\n  border-radius: 4px;\n  border: 2px solid tomato;\n\n  &:focus,\n  &:hover {\n    background-color: tomato;\n    color: white;\n  }\n`;","import PropTypes from 'prop-types';\nimport { Button, Container, Form, Input } from \"./SearchBox.styled\";\n\nconst SearchBox = ({ onSubmit }) => {\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const query = event.target.elements.query.value;\n    if (!query) {\n      return alert('Please, enter something')\n    }\n\n    onSubmit(query);\n    event.target.reset();\n  }\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          name=\"query\"\n          type=\"text\"\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </Container>\n    \n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBox;","import { useSearchParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchMovieByName } from '../API';\nimport MovieList from \"components/MovieList/MovieList\";\nimport SearchBox from \"components/SearchBox/SearchBox\";\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n\nuseEffect(() => {\n  const query = searchParams.get('query');\n  \n  if (!query) return;\n\n  async function searchMovies(currentPage) {\n    try {\n      const { results, total_pages } = await fetchMovieByName(query, currentPage);\n      if (results.length === 0) {\n        return alert('No movie with such name')\n      }\n      const moviesToSave = results.map(result => ({ id: result.id, title: result.title }))\n      setMovies(moviesToSave);\n      setTotalPages(total_pages);\n    } catch (error) {\n      return alert('Something went wrong!')\n    }\n  }\n  searchMovies(page);\n}, [searchParams, page])\n\n  const onSubmit = (query) => {\n    setSearchParams({ query });\n  }\n  \n  const handlePageChange = (newPage) => {\n    setPage(newPage);\n  }\n\n  return (\n    <main>\n      <SearchBox onSubmit={onSubmit} />\n      {movies.length !== 0 && <MovieList movies={movies} header={`Movies containing the query \"${searchParams.get('query')}\"`} changePage={handlePageChange} totalPages={totalPages}/>}\n    </main>\n  );\n};\n\nexport default Movies;"],"names":["axios","API_KEY","fetchTrendMovies","page","response","data","fetchMovieByName","query","fetchMovieById","id","fetchMovieCast","fetchMovieReviews","Container","styled","List","ListItem","Link","NavLink","Paginate","ReactPaginate","PaginatedItems","onPageChange","pageCount","nextLabel","event","selected","pageRangeDisplayed","marginPagesDisplayed","previousLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeClassName","renderOnZeroPageCount","movies","header","totalPages","changePage","location","useLocation","map","title","to","state","from","Form","Input","Button","onSubmit","preventDefault","target","elements","value","alert","reset","name","type","useSearchParams","searchParams","setSearchParams","useState","setMovies","setPage","setTotalPages","useEffect","get","currentPage","results","total_pages","length","moviesToSave","result","searchMovies","MovieList","newPage"],"sourceRoot":""}